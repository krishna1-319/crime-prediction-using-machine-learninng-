import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score, classification_report
from sklearn.preprocessing import StandardScaler

# Load your dataset
file_path = '/content/drive/MyDrive/03_Persons_arrested_and_their_disposal_by_police_and_court_under_crime_against_children_2013.csv'
data = pd.read_csv(file_path)

# Selecting columns of interest
selected_columns = ['Persons arrested during the year', 
                    'Persons in custody or on bail during the stage of investigation at the beginning of the year',
                    ]  # Replace 'TargetColumn' with your actual target column name

data = data[selected_columns]

# Handling missing values if any
data.fillna(data.mean(), inplace=True)  # Filling missing values with mean

# Splitting into features and target variable
X = data.drop('Persons arrested during the year', axis=1)
y = data['Persons arrested during the year']

# Split dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.1, random_state=42)

# Feature scaling (important for KNN)
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Create KNN classifier
knn = KNeighborsClassifier(n_neighbors=5)  # You can adjust the number of neighbors (n_neighbors) here

# Train the model
knn.fit(X_train, y_train)

# Predictions
y_pred = knn.predict(X_test)

# Model evaluation
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy:.4f}")

# Classification report
print("Classification Report:")
print(classification_report(y_test, y_pred))
